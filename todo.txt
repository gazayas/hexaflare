Refactor generation function
Add dataset attributes to hexagons, including rings
Put on hexagon on the core and move with arrow keys
Consider using gradients for colors instead of 8-bit

When placing a floating cluster, check each of its hexagon's children to see if you can push the cluster to the core
  If a child is empty || a child is part of the floating-cluster {
    You can move the cluster down
  } else {
    Gravity pull has finished, place the cluster down and pass the user the next cluster.
  }

<div class="ring" data-full="false">
  <div class="hexagon" data-full="false">
  </div>
  <div class="hexagon" data-full="false">
  </div>
</div>

##################################################

Layout
https://www.nicepng.com/maxp/u2q8r5e6u2e6y3u2/

Making hexagons:
https://jtauber.github.io/articles/css-hexagon.html


Make something similar to a data structure:
  Check how many children a hexagon has
  Fill or block the hexagon depending on its children
